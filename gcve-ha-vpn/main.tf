/*
This example code is a modified and update version of the example provided at https://github.com/GoogleCloudPlatform/community/tree/master/tutorials/deploy-ha-vpn-with-terraform/terraform
Using this example will create the minimum configuration needed to stand up a VPN to GCP/GCVE. It is assumed that you have already created a VPC and
configured peering with your GCVE cluster (https://networkbrouhaha.com/2021/02/gcp-vpc-to-gcve/). This example does not actually create a redundant 
VPN solution, but it can be easily extended to do so by creating a secondary Cloud Router, interface and BGP peer.
*/

provider "google" {
  project = var.project
  region  = var.region
  zone    = var.zone
}

// These data blocks to grab information from existing networks/subnets that will be needed for creating the VPN
data "google_compute_network" "network" {
  name = var.network_name
}

data "google_compute_subnetwork" "subnet" {
  name = var.subnet_name
}
// Create HA VPN gateway
resource "google_compute_ha_vpn_gateway" "ha_vpn_gateway" {
  region  = var.region
  name    = var.ha_vpn_gateway
  network = data.google_compute_network.network.id
}

// Create cloud router
resource "google_compute_router" "vpn-cr" {
  name    = var.cloud_router
  network = data.google_compute_network.network.id
  bgp {
    asn = var.gcp_asn
    // Custom mode is required to advertise additional subnets
    advertise_mode = "CUSTOM"
    advertised_groups = [ "ALL_SUBNETS" ]

    // The advertised ranges should cover any IP ranges in GCVE that you want to access over VPN
    advertised_ip_ranges {
      range = "192.168.80.0/23"
    }
    advertised_ip_ranges {
      range = "192.168.83.0/24"
    }
  }
}

// Create external aka peer gateway
resource "google_compute_external_vpn_gateway" "external_gateway" {
  name            = var.peer_gw_name
  redundancy_type = "SINGLE_IP_INTERNALLY_REDUNDANT"
  description     = "VPN Peer"
  interface {
    id         = 0
    ip_address = var.peer_gw
  }
}

// Create VPN tunnel
resource "google_compute_vpn_tunnel" "tunnel0" {
  name                            = var.tunnel_name
  region                          = var.region
  vpn_gateway                     = google_compute_ha_vpn_gateway.ha_vpn_gateway.self_link
  peer_external_gateway           = google_compute_external_vpn_gateway.external_gateway.self_link
  peer_external_gateway_interface = 0
  shared_secret                   = var.shared_secret
  router                          = google_compute_router.vpn-cr.self_link
  vpn_gateway_interface           = 0
}

// Create cloud router interface
resource "google_compute_router_interface" "router_interface0" {
  name       = var.router_int0
  region     = var.region
  router     = google_compute_router.vpn-cr.name
  ip_range   = var.router_int_ip_0
  vpn_tunnel = google_compute_vpn_tunnel.tunnel0.name
}

// Create BGP peer
resource "google_compute_router_peer" "router_peer0" {
  name                      = var.bgp_peer_0
  router                    = google_compute_router.vpn-cr.name
  region                    = var.region
  peer_asn                  = var.peer_asn
  peer_ip_address           = var.peer_ip
  advertised_route_priority = 100
  interface                 = google_compute_router_interface.router_interface0.name
}